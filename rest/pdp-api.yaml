openapi: 3.0.3
info:
  title: PDP REST API
  description: REST API for SRG SSR's Publication Data Platform.
  version: v1
servers:
  - url: https://api.pdp.{environment}.srgssr.ch/api
    variables:
      environment:
        default: production
        enum:
          - dev
          - int
          - production
externalDocs:
  description: PDP Schema Documentation
  url: 'https://api.pdp.production.srgssr.ch/docs-page.html#section-2'

paths:

  /contents:
    post:
      tags:
        - content
      summary: 'Create or update content and its extracted domain object.'
      operationId: postContent
      responses:
        '200':
          description: >
            The content is successfully stored in the PDP and available in the
            Kafka topics "contents". The source data is extracted asynchronously
            and should be available as the appropriate domain object in the
            GraphQL API and Kafka topic shortly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - azure_auth:
            - 'write:all'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
        description: Article payload
        required: true
    delete:
      tags:
        - content
      summary: >
        Delete content by provenance, domain type and sourceId. This also 
        deletes the domain object that was extracted from this content.
      operationId: deleteContentByQuery
      parameters:
        - name: provenance
          in: query
          description: 'The source system publishing the metadata.'
          required: true
          schema:
            $ref: '#/components/schemas/Provenance'
        - name: domainType
          in: query
          description: 'The domain type of the content.'
          required: true
          schema:
            $ref: '#/components/schemas/DomainType'
        - name: sourceId
          in: query
          description: 'The id in the source system. It has to be unique for the domain type in the source system, but not globally.'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >
            The content is deleted. Extracted domain objects are deleted 
            asynchronously, i.e. it will be unavailable in GraphQL API and the 
            appropriate Kafka topic will receive a tombstone record shortly.
        '400':
          description: 'Bad request, e.g. invalid parameter values.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - azure_auth:
            - 'write:all'

  /contents/{pdpId}:
    delete:
      tags:
        - content
      summary: >
        Delete content by PDP ID. This also deletes the domain object that was
        extracted from this content.
      operationId: deleteContentById
      parameters:
        - name: pdpId
          in: path
          description: 'A PDP ID of a content.'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >
            The content is deleted. Extracted domain objects are deleted 
            asynchronously, i.e. it will be unavailable in GraphQL API and the 
            appropriate Kafka topic will receive a tombstone record shortly.
        '400':
          description: 'Not found'
      security:
        - azure_auth:
            - 'write:all'

components:
  securitySchemes:
    azureAuthDev:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.dev.srgssr.ch/api/.default'
    azureAuthInt:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.int.srgssr.ch/api/.default'
    azureAuthProduction:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.production.srgssr.ch/api/.default'

  schemas:

    ApiError:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: integer
        message:
          type: string

    DomainType:
      description: |
        The type of the content. Contact the PDP team if you have data that does
        not fit any of these types.
        - Article  
          An editorial work consisting of text, graphic, sometimes
          video or audio, created for publication on web-sites, blogs and other
          channels similar to the more traditional paper-based publications.
        - PublicationService  
          A service by which a publishing organisation or person publishes its
          content and offers access to consumers, e.g. "SRF Info" or
          "RSI Rete Uno".
        - PublicationChannel  
          Specific conduits or pathways through which content is delivered from 
          publication services. Operated on a publication platform, e.g. 
          "Radio SRF 1 on Radio" or "Radio SRF 1 on srf.ch".
        - Programme  
          An editorial work as a stand-alone piece or an episode of a
          series, intended to be consumed as a whole.
        - Campaign  
          A Campaign defines a strategy for publishing content to a targeted
          Audience according to a PublicationPlan. Campaign strategies can be
          refined taking into account the analysis of the Resonance of related
          ConsumptionEvents (e.g. likes, downloads, etc). Campaigns can apply to a
          variety of broadcasting strategies e.g. advertising campaigns,
          promotional campaigns or else.
        - Speaker  
          An AI-powered data enrichment that provides essential information about
          the speaking-times of different individuals, primarily public figures,
          within audiovisual assets. This AI-generated data enables in-depth analysis
          and better understanding of the speaker's contribution, aiding journalistic
          research, content discovery, and fact-checking.
        - Collection
          A collection aggregates related editorial objects into a common, higher-level
          container, thereby enhancing their organization and accessibility.
        - Subtitling
          Subtitling are text representing the contents of the audio in a film, television 
          show or other audiovisual media. Subtitling might provide a transcription or translation of spoken dialogue.
      type: string
      enum:
        - Article
        - PublicationService
        - PublicationChannel
        - Programme
        - Campaign
        - Speaker
        - Collection
        - Subtitling

    Content:
      description: >
        Content is an envelope around the input
      type: object
      required:
        - domainType
        - sourceId
        - publisher
        - provenance
        - confidentialityLevel
        - sourceData
      properties:
        domainType:
          $ref: '#/components/schemas/DomainType'
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          description: >
            The id of the content in the source system. It must be unique for
            the domain type in the source system, but not globally.
          type: string
        confidentialityLevel:
          $ref: '#/components/schemas/ConfidentialityLevel'
        sourceData:
          $ref: '#/components/schemas/SourceData'

    SourceData:
      description:
        Upstream data source model
      type: object
      required:
        - data
        - schema
      properties:
        data:
          description: String of source data
          type: string
        schema:
          $ref: '#/components/schemas/SourceSchema'
        mimeType:
          description: "Source data mimetype"
          type: string
          default: "application/json"

    SourceSchema:
      description: "Source data version"
      type: object
      required:
        - version
      properties:
        version:
          type: string

    AcceptedResponse:
      description: Accepted write operation response
      type: object
      properties:
        id:
          type: string

    SuccessResponse:
      description: Created or updated resource response
      type: object
      properties:
        id:
          type: string

    Provenance:
      description: 'The source system publishing the metadata.'
      type: string
      enum:
        - CMS_SRF
        - Escenic_RSI
        - Escenic_RTS
        - CMS_SWI
        - Play_SRF
        - AIS_SRF
        - Angebotsportfolio_SRF
        - WhatsOn_SRF
        - OpenMedia_SRF
        - OpenMedia_RTR
        - AIBOX_SRGSSR
        - Faro_SRF
        - Siranau_RTS
        - Gico_RTS
        - DigAS_SRF
        - DigAS_RTR
        - CUE_RSI
        - PlaySuisse_SRGSSR
        - CUE_RTS

    Publisher:
      description: 'The business unit or external organisation publishing the metadata. Please contact the PDP team if a publisher is missing.'
      type: string
      enum:
        - SRF
        - RTS
        - RSI
        - RTR
        - SWI
        - PZBundeshaus
        - NZZ
        - AP
        - SwissTXT
        - SRGSSR

    ConfidentialityLevel:
      description: |
        The confidentiality level declares the sensitivity of the data and who
        is allowed to access it.
        - C1_Public: available to anyone
        - C2_Internal: available to SRG SSR employees only
      type: string
      enum:
        - C1_Public
        - C2_Internal

    Subtitling:
      required:
        - id
        - sourceId
        - publisher
        - provenance
        - accessConditions
        - updatedAt
        - locator
        - identifiers
      type: object
      properties:
        id:
          type: string
        sourceId:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        accessConditions:
          type: array
          items:
            $ref: '#/components/schemas/AccessCondition'
        locator:
          $ref: '#/components/schemas/URL'


    AccessCondition:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: array
          items:
            $ref: '#/components/schemas/Text'
          nullable: true

    Text:
      required:
        - content
      type: object
      properties:
        content:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        formatted:
          type: object
          allOf:
            - $ref: '#/components/schemas/FormattedContent'
          nullable: true


    Language:
      enum:
        - Unknown
        - ab
        - aa
        - af
        - ak
        - sq
        - am
        - ar
        - an
        - hy
        - as
        - av
        - ae
        - ay
        - az
        - bm
        - ba
        - eu
        - be
        - bn
        - bi
        - bs
        - br
        - bg
        - my
        - ca
        - ch
        - ce
        - ny
        - zh
        - cv
        - kw
        - co
        - cr
        - hr
        - cs
        - da
        - dv
        - nl
        - dz
        - en
        - eo
        - et
        - ee
        - fo
        - fj
        - fi
        - fr
        - ff
        - gl
        - ka
        - de
        - el
        - gn
        - gu
        - ht
        - ha
        - he
        - hz
        - hi
        - ho
        - hu
        - ia
        - id
        - ie
        - ga
        - ig
        - ik
        - io
        - is
        - it
        - iu
        - ja
        - jv
        - kl
        - kn
        - kr
        - ks
        - kk
        - km
        - ki
        - rw
        - ky
        - kv
        - kg
        - ko
        - ku
        - kj
        - la
        - lb
        - lg
        - li
        - ln
        - lo
        - lt
        - lu
        - lv
        - gv
        - mk
        - mg
        - ms
        - ml
        - mt
        - mi
        - mr
        - mh
        - mn
        - na
        - nv
        - nd
        - ne
        - ng
        - nb
        - nn
        - "no"
        - ii
        - nr
        - oc
        - oj
        - cu
        - om
        - or
        - os
        - pa
        - pi
        - fa
        - pl
        - ps
        - pt
        - qu
        - rm
        - rn
        - ro
        - ru
        - sa
        - sc
        - sd
        - se
        - sm
        - sg
        - sr
        - gd
        - sn
        - si
        - sk
        - sl
        - so
        - st
        - es
        - su
        - sw
        - ss
        - sv
        - ta
        - te
        - tg
        - th
        - ti
        - bo
        - tk
        - tl
        - tn
        - to
        - tr
        - ts
        - tt
        - tw
        - ty
        - ug
        - uk
        - ur
        - uz
        - ve
        - vi
        - vo
        - wa
        - cy
        - wo
        - fy
        - xh
        - yi
        - yo
        - za
        - zu
      type: string
      nullable: true


    FormattedContent:
      required:
        - content
        - contentType
      type: object
      properties:
        content:
          type: string
        contentType:
          type: string

    Identifier:
      required:
        - value
        - type
      type: object
      properties:
        value:
          type: string
        type:
          $ref: '#/components/schemas/IdentifierType'

    IdentifierType:
      description: |
        IdentifierType defines the meaning of an Identifier:
        *  PdpId identifies an object in the PDP (e.g. 'urn:pdp:faro_srf:programme:85bef433-ef9a-4183-8d86-78e4e0f40781')
        *  SourceId identifies an object in the source system (see provenance)
        *  ANR identifies an object in the archive context (e.g. '2308936')
        *  ProductId identifies a product (e.g. 'NEWS20201116_TM_0100')
        *  ProductElementId identifies a product element (e.g. 'NEWS20201116_TM_0100_0001')
        *  VariantId identifies a product variant (e.g. 'NEWS20201116_TM_0100_0001')
        *  ConceptId identifies a campaign in the OfferPortfolio (e.g. 'A00104')
        *  ISAN is a unique ISO identifier for audiovisual content (see: https://www.isan.org)
      enum:
        - PdpId
        - SourceId
        - ANR
        - ProductId
        - ProductElementId
        - VariantId
        - ConceptId
        - ISAN
      type: string

    URL:
      type: object
      properties:
        url:
          type: string
