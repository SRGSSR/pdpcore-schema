openapi: 3.0.3
info:
  title: PDP REST API
  description: REST API for SRG SSR's Publication Data Platform.
  version: v1
servers:
  - url: https://api.pdp.{environment}.srgssr.ch/api
    variables:
      environment:
        default: production
        enum:
          - dev
          - int
          - production
#externalDocs: ---> Wait until docs are up to date
#  description: PDP Schema Documentation
#  url: 'https://api.pdp.production.srgssr.ch/docs-page.html#section-2'
paths:
  /articles:
    post:
      tags:
        - article
      summary: Upsert article
      operationId: writeArticle
      responses:
        '202':
          description: Accepted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
        '400':
          description: Invalid input
      security:
        - azure_auth:
            - 'write:all'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        description: Article payload
        required: true
  /channels:
    post:
      tags:
        - channel (not implemented yet - contract only)
      summary: Upsert channel
      operationId: writeChannel
      responses:
        '201':
          description: Channel created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResponse'
        '400':
          description: Invalid input
      security:
        - azure_auth:
            - 'write:all'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Channel payload
        required: true
  /channels/{pdpId}:
    delete:
      tags:
        - delete channel (not implemented yet - contract only)
      summary: Delete channel by PDP Id
      operationId: deleteChannel
      parameters:
        - name: pdpId
          in: path
          description: PDP Id of the channel that needs deleting
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Channel deleted
        '404':
          description: Not found
      security:
        - azure_auth:
            - 'write:all'
  /episodes:
    post:
      tags:
        - episode (alpha)
      summary: Upsert episode
      operationId: writeEpisode
      responses:
        '202':
          description: Accepted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
        '422':
          description: Invalid input
      security:
        - azure_auth:
            - 'write:all'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Episode'
        description: Episode payload
        required: true
  /correlations:
    post:
      tags:
        - correlations
      summary: Upsert Correlation
      operationId: writeCorrelation
      responses:
        '201':
          description: Accepted request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedResponse'
        '400':
          description: Invalid input
      security:
        - azure_auth:
            - 'write:all'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Correlation'
        description: Correlation payload
        required: true
components:
  securitySchemes:
    azureAuthDev:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.dev.srgssr.ch/api/.default'
    azureAuthInt:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.int.srgssr.ch/api/.default'
    azureAuthProduction:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/token'
          authorizationUrl: 'https://login.microsoftonline.com/2598639a-d083-492d-bdbe-f1dd8066b03a/oauth2/v2.0/authorize'
          scopes:
            'write:all': 'https://graphql-api.pdp.production.srgssr.ch/api/.default'
  schemas:

    Channel:
      description: 'A channel is a linear and non-linear broadcast vector for episodes, such as SRF1, RTSUn, RSI LA1.'
      type: object
      required:
        - sourceId
        - publisher
        - provenance
        - confidentialityLevel
      properties:
        publisher:
          description: 'The business unit or external organisation publishing the metadata.'
          allOf:
            - $ref: '#/components/schemas/Publisher'
        provenance:
          description: 'The source system publishing the metadata.'
          allOf:
            - $ref: '#/components/schemas/Provenance'
        sourceId:
          description: 'The id of the show in the source system. It has to be unique in the source system, but not globally.'
          type: string
        confidentialityLevel:
          description: 'In the context of the PDP, this field is used to indicate whether the data may be published publicly.'
          allOf:
            - $ref: '#/components/schemas/ConfidentialityLevel'
        name:
          description: 'The name of the channel.'
          type: string
        distributionVector:
          description: 'Specifies the distribution vector of a channel.'
          allOf:
            - $ref: '#/components/schemas/DistributionVector'
        relatedImages:
          description: 'Images associated with the channel.'
          type: array
          items:
            $ref: '#/components/schemas/Image'

    DistributionVector:
      description: 'A method or platform used to distribute content to its intended audience.'
      type: string
      enum:
        - TV
        - Radio
        - Online

    Episode:
      description: 'An "episode" is a longer and clearly identifiable editorial broadcast which can consist of several individual contributions ("clips") (e.g.: Tagesschau of 20.04.2020) or has a thematically coherent context (e.g.: DOK film about the Generalsteik 1918).'
      type: object
      required:
        - sourceId
        - publisher
        - provenance
        - assetType
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
        alternativeIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/AlternativeIdentifier'
        confidentialityLevel:
          $ref: '#/components/schemas/ConfidentialityLevel'
        assetType:
          $ref: '#/components/schemas/AssetType'
        distributionType:
          $ref: '#/components/schemas/DistributionType'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        title:
          $ref: '#/components/schemas/Text'
        abstract:
          $ref: '#/components/schemas/Text'
        description:
          $ref: '#/components/schemas/Text'
        archivedAt:
          type: string
          format: date-time
        broadcastAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        producedAt:
          type: string
          format: date-time
        duration:
          type: integer
          format: int64
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        productionTypes:
          type: array
          items:
            $ref: '#/components/schemas/ProductionType'
        location:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        relatedEvents:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        relatedPictures:
          type: array
          items:
            $ref: '#/components/schemas/Picture'
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Rights'
        contributors:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EpisodePerson'
              - $ref: '#/components/schemas/EpisodeTeam'
              - $ref: '#/components/schemas/EpisodeDepartment'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        memberOf:
          type: object
          anyOf:
            - $ref: '#/components/schemas/ShowSourceReference'
            - $ref: '#/components/schemas/ShowIdReference'
        parts:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        relatedEpisodes:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EpisodeSourceReference'
              - $ref: '#/components/schemas/EpisodeIdReference'
        scheduledOn:
          type: array
          items:
            $ref: '#/components/schemas/PublicationEvent'
        position:
          type: integer
          format: int32
        seasonNumber:
          type: integer
          format: int32
        episodeNumberInSeason:
          type: integer
          format: int32
        tagline:
          $ref: '#/components/schemas/Text'
        language:
          $ref: '#/components/schemas/Language'
        url:
          $ref: '#/components/schemas/URL'
        includedIn:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/EditorialGroupingSourceReference'
              - $ref: '#/components/schemas/EditorialGroupingIdReference'
    Article:
      description: 'A CMS website article.'
      type: object
      required:
        - sourceId
        - publisher
        - provenance
      properties:
        sourceId:
          type: string
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        title:
          $ref: '#/components/schemas/Text'
        confidentialityLevel:
          $ref: '#/components/schemas/ConfidentialityLevel'
        contributors:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ArticlePerson'
              - $ref: '#/components/schemas/ArticleTeam'
              - $ref: '#/components/schemas/ArticleDepartment'
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        relatedEpisodes:
          type: array
          items:
            $ref: '#/components/schemas/EpisodeSourceReference'
        relatedClips:
          type: array
          items:
            $ref: '#/components/schemas/ClipSourceReference'
        relatedArticles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSourceReference'
        relatedPictures:
          type: array
          items:
            $ref: '#/components/schemas/Picture'
        content:
          $ref: '#/components/schemas/ArticleContent'
        url:
          $ref: '#/components/schemas/URL'
        abstract:
          $ref: '#/components/schemas/Text'
        modifiedAt:
          type: string
          format: date-time
        releasedAt:
          type: string
          format: date-time
        publicationStatus:
          $ref: '#/components/schemas/PublicationStatus'
        kicker:
          $ref: '#/components/schemas/Text'
        isLongForm:
          type: boolean
    Correlation:
      description: 'A Correlation between two assets.'
      type: object
      required:
        - publisher
        - provenance
        - left
        - right
      properties:
        sourceId:
          type: string
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        left:
          $ref: '#/components/schemas/SourceReference'
        right:
          $ref: '#/components/schemas/SourceReference'
    SourceReference:
      description: 'A SourceReference to an asset within a Correlation.'
      type: object
      required:
        - publisher
        - provenance
        - sourceId
        - type
      properties:
        sourceId:
          type: string
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        type:
          $ref: '#/components/schemas/ReferenceType'
    ReferenceType:
      type: string
      enum:
        - Episode
        - Clip
    CreatedResponse:
      description: A CreatedResponse which contains the pdp id of the persisted object
      type: object
      properties:
        id:
          type: string
    AcceptedResponse:
      description: Accepted write operation response
      type: object
      properties:
        id:
          type: string
    Provenance:
      description: 'The source system publishing the metadata.'
      type: string
      enum:
        - Archive
        - CMS
        - Play
        - PlaySuisse
        - OfferPortfolio
        - AIS
        - Digas
        - OpenMedia
        - WhatsOn
        - MOVEit
    Publisher:
      description: 'The business unit or external organisation publishing the metadata. Please contact the PDP team if a publisher is missing.'
      type: string
      enum:
        - SRF
        - RTS
        - RSI
        - RTR
        - SWI
        - PZBundeshaus
        - NZZ
        - AP
        - SwissTXT
    ConfidentialityLevel:
      type: string
      enum:
        - C1_Public
        - C2_Internal
    Topic:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Text'
    Text:
      type: object
      required:
        - content
      properties:
        content:
          type: string
        language:
          $ref: '#/components/schemas/Language'
    MultilingualText:
      type: object
      required:
        - texts
      properties:
        texts:
          type: array
          items:
            $ref: '#/components/schemas/Text'
    Role:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    AgentType:
      type: string
      enum:
        - Person
        - Team
        - Department
    ArticlePerson:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    ArticleTeam:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
    ArticleDepartment:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
    EpisodePerson:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    EpisodeTeam:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
    EpisodeDepartment:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
    Genre:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Text'
        description:
          $ref: '#/components/schemas/Text'
    Location:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Text'
    Event:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Text'

    Image:
      description: 'Describes visual material - such as logos, thumbnails or other visual elements - that belong to an asset.'
      type: object
      required:
        - variants
      properties:
        titles:
          description: 'A list of localised titles given to the image.'
          type: array
          items:
            $ref: '#/components/schemas/Text'
        copyright:
          description: 'Rights and restrictions associated to the image.'
          type: string
        usage:
          description: 'The intended usage of the image, e.g. `TEASER` or `LOGO`.'
          type: string
        variants:
          description: 'Variants of the image.'
          type: array
          items:
            $ref: '#/components/schemas/ImageVariant'

    ImageVariant:
      description: 'A variant of an image.'
      type: object
      required:
        - url
      properties:
        usage:
          description: 'The intended usage of the image variant.'
          type: string
        url:
          $ref: '#/components/schemas/URL'
        width:
          description: 'The width of the image in pixels.'
          type: integer
          format: int32
        height:
          description: 'The height of the image in pixels.'
          type: integer
          format: int32
        aspectRatio:
          $ref: '#/components/schemas/AspectRatio'

    Picture:
      type: object
      required:
        - url
      properties:
        url:
          $ref: '#/components/schemas/URL'
        title:
          $ref: '#/components/schemas/Text'
        rights:
          type: array
          items:
            $ref: '#/components/schemas/Rights'
        width:
          type: integer
        height:
          type: integer
        aspectRatio:
          $ref: '#/components/schemas/AspectRatio'
    URL:
      type: object
      required:
        - url
      properties:
        url:
          type: string
    Rights:
      type: object
      properties:
        rightsHolder:
          $ref: '#/components/schemas/RightsHolder'
        usageRights:
          type: array
          items:
            type: string
        availableFrom:
          type: string
          format: date-time
        availableTo:
          type: string
          format: date-time
    RightsHolder:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    AspectRatio:
      description: 'The aspect ratio of an image.'
      type: object
      required:
        - ratio
      properties:
        ratio:
          description: 'The aspect ratio, e.g. 16:9 or 4:3.'
          type: string
    ArticleContent:
      type: object
      required:
        - text
      properties:
        text:
          type: array
          items:
            type: string
    PublicationStatus:
      type: string
      enum:
        - "Published"
        - "Unpublished"
    Language:
      type: string
      enum:
        - "ab"
        - "aa"
        - "af"
        - "ak"
        - "sq"
        - "am"
        - "ar"
        - "an"
        - "hy"
        - "as"
        - "av"
        - "ae"
        - "ay"
        - "az"
        - "bm"
        - "ba"
        - "eu"
        - "be"
        - "bn"
        - "bi"
        - "bs"
        - "br"
        - "bg"
        - "my"
        - "ca"
        - "ch"
        - "ce"
        - "ny"
        - "zh"
        - "cv"
        - "kw"
        - "co"
        - "cr"
        - "hr"
        - "cs"
        - "da"
        - "dv"
        - "nl"
        - "dz"
        - "en"
        - "eo"
        - "et"
        - "ee"
        - "fo"
        - "fj"
        - "fi"
        - "fr"
        - "ff"
        - "gl"
        - "ka"
        - "de"
        - "el"
        - "gn"
        - "gu"
        - "ht"
        - "ha"
        - "he"
        - "hz"
        - "hi"
        - "ho"
        - "hu"
        - "ia"
        - "id"
        - "ie"
        - "ga"
        - "ig"
        - "ik"
        - "io"
        - "is"
        - "it"
        - "iu"
        - "ja"
        - "jv"
        - "kl"
        - "kn"
        - "kr"
        - "ks"
        - "kk"
        - "km"
        - "ki"
        - "rw"
        - "ky"
        - "kv"
        - "kg"
        - "ko"
        - "ku"
        - "kj"
        - "la"
        - "lb"
        - "lg"
        - "li"
        - "ln"
        - "lo"
        - "lt"
        - "lu"
        - "lv"
        - "gv"
        - "mk"
        - "mg"
        - "ms"
        - "ml"
        - "mt"
        - "mi"
        - "mr"
        - "mh"
        - "mn"
        - "na"
        - "nv"
        - "nd"
        - "ne"
        - "ng"
        - "nb"
        - "nn"
        - "no"
        - "ii"
        - "nr"
        - "oc"
        - "oj"
        - "cu"
        - "om"
        - "or"
        - "os"
        - "pa"
        - "pi"
        - "fa"
        - "pl"
        - "ps"
        - "pt"
        - "qu"
        - "rm"
        - "rn"
        - "ro"
        - "ru"
        - "sa"
        - "sc"
        - "sd"
        - "se"
        - "sm"
        - "sg"
        - "sr"
        - "gd"
        - "sn"
        - "si"
        - "sk"
        - "sl"
        - "so"
        - "st"
        - "es"
        - "su"
        - "sw"
        - "ss"
        - "sv"
        - "ta"
        - "te"
        - "tg"
        - "th"
        - "ti"
        - "bo"
        - "tk"
        - "tl"
        - "tn"
        - "to"
        - "tr"
        - "ts"
        - "tt"
        - "tw"
        - "ty"
        - "ug"
        - "uk"
        - "ur"
        - "uz"
        - "ve"
        - "vi"
        - "vo"
        - "wa"
        - "cy"
        - "wo"
        - "fy"
        - "xh"
        - "yi"
        - "yo"
        - "za"
        - "zu"
    AlternativeIdentifier:
      type: object
      required:
        - publisher
        - provenance
        - value
        - type
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        value:
          type: string
        type:
          type: string
    AssetType:
      type: string
      enum:
        - Audio
        - Video
    DistributionType:
      type: string
      enum:
        - Broadcast
        - HbbTV
        - VideoOnDemand
        - AudioOnDemand
        - VideoPodcast
        - AudioPodcast
        - LiveStream
    Comment:
      description: 'A comment about an asset from the source system. Attention: these are not user comments!'
      type: object
      required:
        - text
      properties:
        text:
          type: string
    ProductionType:
      type: object
      required:
        - type
      properties:
        type:
          type: string
    Part:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/Text'
        description:
          $ref: '#/components/schemas/Text'
        archivedAt:
          $ref: '#/components/schemas/Date'
        modifiedAt:
          $ref: '#/components/schemas/Date'
        start:
          $ref: '#/components/schemas/Long'
        duration:
          $ref: '#/components/schemas/Long'
        end:
          $ref: '#/components/schemas/Long'
        relatedLocations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        relatedEvents:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Date:
      type: string
      format: date-time
    Long:
      type: integer
      format: int64
    ShowSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    ShowIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
    EpisodeSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    EpisodeIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
    PublicationEvent:
      type: object
      properties:
        publicationStart:
          $ref: '#/components/schemas/Date'
        publicationEnd:
          $ref: '#/components/schemas/Date'
        publicationChannel:
          type: object
          anyOf:
            - $ref: '#/components/schemas/ChannelSourceReference'
            - $ref: '#/components/schemas/ChannelIdReference'
    ChannelSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    ChannelIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
    EditorialGroupingSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    EditorialGroupingIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
    ClipSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    ClipIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
    ArticleSourceReference:
      type: object
      required:
        - publisher
        - provenance
        - sourceId
      properties:
        publisher:
          $ref: '#/components/schemas/Publisher'
        provenance:
          $ref: '#/components/schemas/Provenance'
        sourceId:
          type: string
    ArticleIdReference:
      type: object
      required:
        - id
      description: 'PDP id, format: "urn:pdp:{publisher}:{provenance}:{type}:{sourceId}"'
      properties:
        id:
          type: string
