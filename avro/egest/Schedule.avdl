@namespace("ch.srgssr.pdp.domain.egest")
protocol Schedule {

    import idl "Calendar.avdl";
    import idl "ChannelReference.avdl";
    import idl "ScheduleRepeatFrequency.avdl";

    /** A schedule defines a repeating time period used to describe a regularly occurring episode. With the provided metadata fields, you are able to define the schedule. The section "Schema Concepts: Show Schedules" in the PDP API documentation goes into more details and provides a few example schedules. */
    record Schedule {
        /** Defines the day(s) of the week on which episodes of the show are scheduled. */
        union{null, array<DayOfWeek>} byDay = null;
        /** Defines the month(s) of the year on which episodes of the show are scheduled. */
        union{null, array<Month>} byMonth = null;
        /** Defines the day(s) of the month on which episodes of the show are scheduled. Specified as an integer between 1-31. */
        union{null, array<int>} byMonthDay = null;
        /** Defines the week(s) of the month on which episodes of the show are scheduled. Specified as an integer between 1-5. */
        union{null, array<int>} byMonthWeek = null;
        /** The duration of a single episode in the show in milliseconds. */
        long? duration = null;
        /** The start date of an episode of the show in ISO 8601 calendar date format `YYYY-MM-DD`. */
        date? startDate = null;
        /** The start time of an episode of the show in ISO 8601 time format `hh:mm:ss.sss[Z|±hh:mm]`. */
        time_ms? startTime = null;
        /** The start date and time of the last episode of the show in ISO 8601 format `YYYY-MM-DDThh:mm:ss.sss[Z|±hh:mm]`. */
        timestamp_ms? end = null;
        /** The repeat frequency of the schedule. */
        ScheduleRepeatFrequency? repeatFrequency = null;
        /** Set to true when the schedule contains first showings, set to false when it contains repeat showings. */
        boolean? isFirstShowing = null;
    }

}
